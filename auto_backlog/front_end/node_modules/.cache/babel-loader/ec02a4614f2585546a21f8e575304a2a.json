{"ast":null,"code":"var _jsxFileName = \"D:\\\\auto_backlog\\\\auto_front\\\\src\\\\App.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport { API_URL, PRO_PREFIX, BACKLOG_API_KEY, BACKLOG_URL, OPEN_STATUS } from \"./utilities/constants.js\";\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    const date = new Date();\n    this.state = {\n      hour: this.checkTime(date.getHours()),\n      minute: this.checkTime(date.getMinutes()),\n      second: this.checkTime(date.getSeconds()),\n      crt_minute: \"\"\n    };\n    this.autoUpdate = this.autoUpdate.bind(this);\n    this.checkTime = this.checkTime.bind(this);\n  }\n\n  checkTime(elem) {\n    if (elem < 10) {\n      elem = \"0\" + elem;\n    }\n\n    return elem;\n  }\n\n  autoUpdate() {\n    const date = new Date();\n    this.setState({\n      hour: this.checkTime(date.getHours()),\n      minute: this.checkTime(date.getMinutes()),\n      second: this.checkTime(date.getSeconds())\n    });\n    let crt_minute = this.state.crt_minute;\n    let minute = this.state.minute;\n\n    if (minute === 28 && minute !== crt_minute) {\n      this.setState({\n        crt_minute: minute\n      });\n      this.getDataLupack();\n    }\n  }\n\n  componentDidMount() {\n    window.setInterval(this.autoUpdate, 1000);\n  }\n\n  getDataLupack() {\n    const url = API_URL + \"fdoc_t_ticket\";\n    axios.get(url).then(response => {\n      this.updateBacklog(response.data.entities.tickets);\n    });\n  }\n\n  updateBacklog(tickets) {\n    let issueName = \"\";\n    let url = \"\";\n    tickets.forEach(ticket => {\n      issueName = PRO_PREFIX + ticket.tik_i_trac_id;\n      url = BACKLOG_URL + \"issues/\" + issueName + \"?apiKey=\" + BACKLOG_API_KEY;\n      axios.get(url).then(response => {\n        console.log(response);\n\n        if (response.data.status.id === 1) {\n          console.log(\"ticket: \" + response.data.issueKey);\n          axios.patch(url, {\n            statusId: 2\n          }).then(response2 => {\n            console.log(response2);\n          }).catch(e2 => {\n            console.log(e2);\n          });\n        }\n      }).catch(e => {\n        console.log(e);\n      });\n    });\n  }\n\n  render() {\n    const state = this.state;\n    const time = state.hour + \":\" + state.minute + \":\" + state.second;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }, time));\n  }\n\n}","map":{"version":3,"sources":["D:/auto_backlog/auto_front/src/App.js"],"names":["React","axios","API_URL","PRO_PREFIX","BACKLOG_API_KEY","BACKLOG_URL","OPEN_STATUS","App","Component","constructor","props","date","Date","state","hour","checkTime","getHours","minute","getMinutes","second","getSeconds","crt_minute","autoUpdate","bind","elem","setState","getDataLupack","componentDidMount","window","setInterval","url","get","then","response","updateBacklog","data","entities","tickets","issueName","forEach","ticket","tik_i_trac_id","console","log","status","id","issueKey","patch","statusId","response2","catch","e2","e","render","time"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport {\n  API_URL,\n  PRO_PREFIX,\n  BACKLOG_API_KEY,\n  BACKLOG_URL,\n  OPEN_STATUS\n} from \"./utilities/constants.js\";\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    const date = new Date();\n    this.state = {\n      hour: this.checkTime(date.getHours()),\n      minute: this.checkTime(date.getMinutes()),\n      second: this.checkTime(date.getSeconds()),\n      crt_minute: \"\"\n    };\n    this.autoUpdate = this.autoUpdate.bind(this);\n    this.checkTime = this.checkTime.bind(this);\n  }\n\n  checkTime(elem) {\n    if (elem < 10) {\n      elem = \"0\" + elem;\n    }\n    return elem;\n  }\n\n  autoUpdate() {\n    const date = new Date();\n    this.setState({\n      hour: this.checkTime(date.getHours()),\n      minute: this.checkTime(date.getMinutes()),\n      second: this.checkTime(date.getSeconds())\n    });\n    let crt_minute = this.state.crt_minute;\n    let minute = this.state.minute;\n    if (minute === 28 && minute !== crt_minute) {\n      this.setState({ crt_minute: minute });\n      this.getDataLupack();\n    }\n  }\n\n  componentDidMount() {\n    window.setInterval(this.autoUpdate, 1000);\n  }\n\n  getDataLupack() {\n    const url = API_URL + \"fdoc_t_ticket\";\n    axios.get(url).then(response => {\n      this.updateBacklog(response.data.entities.tickets);\n    });\n  }\n\n  updateBacklog(tickets) {\n    let issueName = \"\";\n    let url = \"\";\n    tickets.forEach(ticket => {\n      issueName = PRO_PREFIX + ticket.tik_i_trac_id;\n      url = BACKLOG_URL + \"issues/\" + issueName + \"?apiKey=\" + BACKLOG_API_KEY;\n      axios\n        .get(url)\n        .then(response => {\n          console.log(response);\n          if (response.data.status.id === 1) {\n            console.log(\"ticket: \" + response.data.issueKey);\n            axios\n              .patch(url, {\n                statusId: 2\n              })\n              .then(response2 => {\n                console.log(response2);\n              })\n              .catch(e2 => {\n                console.log(e2);\n              });\n          }\n        })\n        .catch(e => {\n          console.log(e);\n        });\n    });\n  }\n\n  render() {\n    const state = this.state;\n    const time = state.hour + \":\" + state.minute + \":\" + state.second;\n    return (\n      <div className=\"App\">\n        <h1>{time}</h1>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}