{"ast":null,"code":"var _jsxFileName = \"D:\\\\auto_backlog\\\\auto_front\\\\src\\\\App.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport { API_URL, PRO_PREFIX, BACKLOG_API_KEY, BACKLOG_URL, OPEN_STATUS, AUTO_UPDATE_MIN, LUPACK_ATTR } from \"./utilities/constants.js\";\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    const date = new Date();\n    this.state = {\n      hour: this.checkTime(date.getHours()),\n      minute: this.checkTime(date.getMinutes()),\n      second: this.checkTime(date.getSeconds()),\n      crt_minute: \"\"\n    };\n    this.autoUpdate = this.autoUpdate.bind(this);\n    this.checkTime = this.checkTime.bind(this);\n  }\n\n  checkTime(elem) {\n    if (elem < 10) {\n      elem = \"0\" + elem;\n    }\n\n    return elem;\n  }\n\n  autoUpdate() {\n    const date = new Date();\n    this.setState({\n      hour: this.checkTime(date.getHours()),\n      minute: this.checkTime(date.getMinutes()),\n      second: this.checkTime(date.getSeconds())\n    });\n    let crt_minute = this.state.crt_minute;\n    let minute = this.state.minute;\n\n    if (this.state.hour > 9 && this.state.hour < 18) {\n      if (minute % AUTO_UPDATE_MIN === 0 && minute !== crt_minute) {\n        this.setState({\n          crt_minute: minute\n        });\n        this.getDataLupack();\n      }\n    }\n  } //Set thời gian update logic. Hiện tại: Cứ 1000ms thì update 1 lần\n\n\n  componentDidMount() {\n    window.setInterval(this.autoUpdate, 1000);\n  }\n\n  getDataLupack() {\n    const url = API_URL + \"fdoc_t_ticket/find/pro_id=\" + LUPACK_ATTR.proId + \"&mile_stone=\" + LUPACK_ATTR.mileStone + \"&status=\" + LUPACK_ATTR.status;\n    axios.get(url).then(response => {\n      this.updateBacklog(response.data.entities.tickets);\n    });\n  }\n\n  updateBacklog(tickets) {\n    tickets.forEach(ticket => {\n      const issueName = PRO_PREFIX + ticket.tik_i_trac_id;\n      const urlGet = BACKLOG_URL + \"issues/\" + issueName + \"?apiKey=\" + BACKLOG_API_KEY;\n      axios.get(urlGet).then(response => {\n        const data = response.data;\n\n        if (data.status.id === OPEN_STATUS) {\n          const urlUpdate = BACKLOG_URL + \"issues/\" + data.issueKey + \"?apiKey=\" + BACKLOG_API_KEY;\n          axios.patch(urlUpdate, {\n            statusId: 2\n          }).then(response2 => {\n            console.log(response2);\n          }).catch(e2 => {\n            console.log(e2);\n          });\n        }\n      }).catch(e => {\n        console.log(e);\n      });\n    });\n  }\n\n  render() {\n    const state = this.state;\n    const time = state.hour + \":\" + state.minute + \":\" + state.second;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }\n    }, time));\n  }\n\n}","map":{"version":3,"sources":["D:/auto_backlog/auto_front/src/App.js"],"names":["React","axios","API_URL","PRO_PREFIX","BACKLOG_API_KEY","BACKLOG_URL","OPEN_STATUS","AUTO_UPDATE_MIN","LUPACK_ATTR","App","Component","constructor","props","date","Date","state","hour","checkTime","getHours","minute","getMinutes","second","getSeconds","crt_minute","autoUpdate","bind","elem","setState","getDataLupack","componentDidMount","window","setInterval","url","proId","mileStone","status","get","then","response","updateBacklog","data","entities","tickets","forEach","ticket","issueName","tik_i_trac_id","urlGet","id","urlUpdate","issueKey","patch","statusId","response2","console","log","catch","e2","e","render","time"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport {\n  API_URL,\n  PRO_PREFIX,\n  BACKLOG_API_KEY,\n  BACKLOG_URL,\n  OPEN_STATUS,\n  AUTO_UPDATE_MIN,\n  LUPACK_ATTR\n} from \"./utilities/constants.js\";\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    const date = new Date();\n    this.state = {\n      hour: this.checkTime(date.getHours()),\n      minute: this.checkTime(date.getMinutes()),\n      second: this.checkTime(date.getSeconds()),\n      crt_minute: \"\"\n    };\n    this.autoUpdate = this.autoUpdate.bind(this);\n    this.checkTime = this.checkTime.bind(this);\n  }\n\n  checkTime(elem) {\n    if (elem < 10) {\n      elem = \"0\" + elem;\n    }\n    return elem;\n  }\n\n  autoUpdate() {\n    const date = new Date();\n    this.setState({\n      hour: this.checkTime(date.getHours()),\n      minute: this.checkTime(date.getMinutes()),\n      second: this.checkTime(date.getSeconds())\n    });\n    let crt_minute = this.state.crt_minute;\n    let minute = this.state.minute;\n    if (this.state.hour > 9 && this.state.hour < 18) {\n      if (minute % AUTO_UPDATE_MIN === 0 && minute !== crt_minute) {\n        this.setState({ crt_minute: minute });\n        this.getDataLupack();\n      }\n    }\n  }\n\n  //Set thời gian update logic. Hiện tại: Cứ 1000ms thì update 1 lần\n  componentDidMount() {\n    window.setInterval(this.autoUpdate, 1000);\n  }\n\n  getDataLupack() {\n    const url =\n      API_URL +\n      \"fdoc_t_ticket/find/pro_id=\" +\n      LUPACK_ATTR.proId +\n      \"&mile_stone=\" +\n      LUPACK_ATTR.mileStone +\n      \"&status=\" +\n      LUPACK_ATTR.status;\n    axios.get(url).then(response => {\n      this.updateBacklog(response.data.entities.tickets);\n    });\n  }\n\n  updateBacklog(tickets) {\n    tickets.forEach(ticket => {\n      const issueName = PRO_PREFIX + ticket.tik_i_trac_id;\n      const urlGet =\n        BACKLOG_URL + \"issues/\" + issueName + \"?apiKey=\" + BACKLOG_API_KEY;\n      axios\n        .get(urlGet)\n        .then(response => {\n          const data = response.data;\n          if (data.status.id === OPEN_STATUS) {\n            const urlUpdate =\n              BACKLOG_URL +\n              \"issues/\" +\n              data.issueKey +\n              \"?apiKey=\" +\n              BACKLOG_API_KEY;\n            axios\n              .patch(urlUpdate, {\n                statusId: 2\n              })\n              .then(response2 => {\n                console.log(response2);\n              })\n              .catch(e2 => {\n                console.log(e2);\n              });\n          }\n        })\n        .catch(e => {\n          console.log(e);\n        });\n    });\n  }\n\n  render() {\n    const state = this.state;\n    const time = state.hour + \":\" + state.minute + \":\" + state.second;\n    return (\n      <div className=\"App\">\n        <h1 align=\"center\">{time}</h1>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}